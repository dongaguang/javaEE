<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation=" http://www.springframework.org/schema/beans  
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
       http://www.springframework.org/schema/context  
       http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<context:annotation-config/>
	<bean id="dukeTarget" class="spring.service.impl.Juggler">
		<!-- 加上这个参数则使用带参数的构造函数 -->
		<constructor-arg value="11" />
	</bean>
	<!-- duke的代理 -->
	<bean id="duke" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="dukeTarget"></property>
		<property name="interceptorNames" value="performancePointCut"></property>
		<property name="proxyInterfaces" value="spring.service.Performer"></property>
	</bean>
	
	<!-- 定义正则表达式切点 -->
	<bean id="performancePointCut" class="org.springframework.aop.support.JdkRegexpMethodPointcut">
		<property name="pattern" value=".*perform" />
	</bean>
	
	<bean name="audience" class="spring.service.impl.Audience"></bean>
	<bean name="audienceAdvice" class="spring.service.impl.AudienceAdvice">
		<property name="audience" ref="audience"></property>
	</bean>
	
	<bean id="sonnet" class="spring.service.impl.Sonnet"></bean>
	<bean id="instrument" class="spring.service.impl.SaxoPhone"></bean>
	<bean id="saxoPhone" class="spring.service.impl.SaxoPhone"></bean>
	<bean id="guitar" class="spring.service.impl.Guitar"></bean>
	
	<!-- spring使用List注入集合bean -->
	<bean id="oneManBand" class="spring.service.impl.OneManBand">
		<property name="instruments">
			<list>
				<ref bean="saxoPhone"/>
				<ref bean="guitar"/>
				<ref bean="guitar"/>
			</list>
		</property>
	</bean>
	
	<!-- spring使用set注入集合bean -->
	<bean id="oneManBand1" class="spring.service.impl.OneManBand">
		<property name="instruments">
			<set>
				<ref bean="saxoPhone"/>
				<ref bean="guitar"/>
				<!-- 使用set方式注入集合bean的时候因为set的元素不能重复，所以最后这个guitar会被忽略掉 -->
				<ref bean="guitar"/>
			</set>
		</property>
	</bean>
	
	<!-- spring使用set注入集合bean -->
	<bean id="oneManBand2" class="spring.service.impl.OneManBandByMap">
		<property name="instruments">
			<map>
				<!-- 
					1.key:指定map项的键为String
					2.key-ref:指定map项的键为Spring上下文中其他bean的引用
					3.value:指定map项的值为String
					4.value-ref:指定map项的值为Spring上下文中其他bean的引用
				 -->
				<entry key="guitar" value-ref="guitar"></entry>
				<entry key="saxoPhone" value-ref="saxoPhone"></entry>
			</map>
		</property>
	</bean>
	
	<bean id="magician" class="spring.magic.impl.Magician">
		<property name="magicWords" value="hahaha"></property>
		<property name="magicBox" ref="magicBox"></property>
	</bean>
	
	<bean id="magicBox" class="spring.magic.impl.MagicBoxImpl">
		<!--
			方法注入：使用了tigerReplacer的reimplement()方法替换了magicBox的getContents()方法
			tigerReplacer需要实现Spring的MethodReplacer()接口
		 -->
		<replaced-method name="getContents" replacer="tigerReplacer" />
	</bean>
	<bean id="tigerReplacer" class="spring.magic.impl.TigerReplacer"></bean>
	
	<bean id="stevie" class="spring.service.impl.Instrumentalist">
		<lookup-method name="getInstrument" bean="guitar"/>
		<property name="song" value="yesterday once more"></property>
	</bean>
	
</beans>